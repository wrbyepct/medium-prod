#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

# Import constants & messages script
backup_dir=$(dirname $BASH_SOURCE[0])

source "$backup_dir/_sourced/constants.sh"
source "$backup_dir/_sourced/messages.sh"

# Check if the filename is specified
if [[ -z ${1+x} ]]; then
    message_error "Backup filename is not specified yet. Make sure you provide one."
    exit 1
fi 

bakcup_filename="${DB_BACKUP_DIR_PATH}/$1"


# Check if file exits
if [[ ! -f $bakcup_filename ]]; then
    message_error "Backup filname does not exist. Please provide a valid file path"
    exit 1
fi


# Restore backups 
message_welcome "Restoring $POSTGRES_DB database from the $bakcup_filename backup..."

if [[ $POSTGRES_USER == "postgres" ]]; then 
    message_error "Restore as user 'postgres' is not allowed.\nAssign 'POSTGRES_USER' env with another name and try again."
    exit 1
fi 


export PGHOST=$POSTGRES_HOST
export PGPORT=$POSTGRES_PORT
export PGUSER=$POSTGRES_USER
export PGPASSWORD=$POSTGRES_PASSWORD
export PGDATABASE=$POSTGRES_DB


message_info "Dropping database...\n"

dropdb $POSTGRES_DB

message_info "Creating another database...\n"

createdb --owner $POSTGRES_USER

message_info "Applying backup to new database...\n"

gunzip -c $bakcup_filename | psql $POSTGRES_DB

message_success "The $POSTGRES_DB database has been restored successfully from $bakcup_filename backup."
