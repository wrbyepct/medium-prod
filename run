#!/bin/bash

prune-all-images() {
    docker image prune -a
 
}

manage() {
 
    docker-compose -f local.yml run --rm api python -m core.manage $@
}

start-app() {
    poetry run python -m core.manage startapp $1
}

# Migrations
makemigrations() {
    docker-compose -f local.yml run --rm api python -m core.manage makemigrations $@
}

migrate-to() {
    docker-compose -f local.yml run --rm api python -m core.manage migrate "$1"
}

unmigrate() {
    docker-compose -f local.yml run --rm api python -m core.manage migrate $1 zero $2
}


api() {
    docker-compose -f local.yml exec api $@
}

# Lint

lint:ci() {
    SKIP=no-commit-to-branch pre-commit run --all-files --show-diff-on-failure
}

lint() {
    git add .; poetry run pre-commit run --all-files 
}

update-precommit() {
    poetry run pre-commit uninstall; poetry run pre-commit clean; poetry run pre-commit install
}


# contrainer
up() {
    docker-compose -f local.yml up --build -d 
}

down() {
    docker-compose -f local.yml down
}

prod-up() {
    docker-compose -f prod.yml up --build -d 
}

prod-down() {
    docker-compose -f prod.yml down
}

# Tests
test() {
    docker-compose -f local.yml exec -e IN_TEST=1 api pytest $@ 
}

test:ci() {
    poetry run env IN_TEST=1 pytest \
    -x \
    -n auto \
    --dist loadfile
}

test-dist() {
    docker-compose -f local.yml exec -e IN_TEST=1 api pytest $@ \
    -n auto \
    --dist loadfile
}

test-report() {
    docker-compose -f local.yml exec -e IN_TEST=1 api pytest $@  \
    -n auto \
    --dist loadfile \
    --cov-report term-missing \
    --cov-report html \
    --cov=core \
    --cov-config=pyproject.toml
}

help() {
    echo "${1} <task> <arg>s"
    echo "Tasks:"
    compgen -A function | cat -n 
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}
